{"ast":null,"code":"var _jsxFileName = \"/home/buntix/Documents/mern-Application/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cars, setCars] = useState(\"\");\n  //fetch all cars from mongodb\n  useEffect(() => {\n    fetch(\"http://localhost:3000/cars\").then(res => res.json()).then(data => {\n      setCars(data);\n    });\n  }, []);\n\n  //add new car to mongodb\n  const addCar = () => {\n    const name = prompt(\"Enter car name\");\n    const model = prompt(\"Enter car model\");\n    const color = prompt(\"Enter car color\");\n    fetch(\"http://localhost:3000/newCar\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        model,\n        color\n      })\n    }).then(res => res.json()).then(data => {\n      setCars([...cars, data]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addCar,\n      children: \"Add Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cars\",\n      children: cars && cars.map(car => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"car\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: car.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: car.model\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: car.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, car._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"R+agKWIOZbq/JAuWnUvKQPMu/Mw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","cars","setCars","fetch","then","res","json","data","addCar","name","prompt","model","color","method","headers","body","JSON","stringify","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","car","_id","_c","$RefreshReg$"],"sources":["/home/buntix/Documents/mern-Application/client/src/App.js"],"sourcesContent":["import './App.css'\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n\n  const [cars, setCars] = useState(\"\")\n  //fetch all cars from mongodb\n  useEffect(() => {\n    fetch(\"http://localhost:3000/cars\")\n    .then((res) => res.json())\n    .then((data) => {\n      setCars(data)\n    })\n  }, [])\n  \n  //add new car to mongodb\n  const addCar = () => {\n    const name = prompt(\"Enter car name\")\n    const model = prompt(\"Enter car model\")\n    const color = prompt(\"Enter car color\")\n    fetch(\"http://localhost:3000/newCar\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ name, model, color }),\n    })\n    .then((res) => res.json())\n    .then((data) => {\n      setCars([...cars, data])\n    })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <button onClick={addCar}>Add Car</button>\n      \n    <div className=\"cars\">\n      {cars && cars.map((car) => (\n        <div className=\"car\" key={car._id}>\n          <h2>{car.name}</h2>\n          <h3>{car.model}</h3>\n          <h3>{car.color}</h3>\n          </div>\n      ))}\n          \n       </div>\n       </div>\n\n      \n  );\n      }\n  \n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC;EACAC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,4BAA4B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdL,OAAO,CAACK,IAAI,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB,MAAMC,IAAI,GAAGC,MAAM,CAAC,gBAAgB,CAAC;IACrC,MAAMC,KAAK,GAAGD,MAAM,CAAC,iBAAiB,CAAC;IACvC,MAAME,KAAK,GAAGF,MAAM,CAAC,iBAAiB,CAAC;IACvCP,KAAK,CAAC,8BAA8B,EAAE;MACpCU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,IAAI;QAAEE,KAAK;QAAEC;MAAM,CAAC;IAC7C,CAAC,CAAC,CACDR,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdL,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEM,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC;EAGD,oBACET,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAQsB,OAAO,EAAEZ,MAAO;MAAAW,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE3C1B,OAAA;MAAKoB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBlB,IAAI,IAAIA,IAAI,CAACwB,GAAG,CAAEC,GAAG,iBACpB5B,OAAA;QAAKoB,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAClBrB,OAAA;UAAAqB,QAAA,EAAKO,GAAG,CAACjB;QAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnB1B,OAAA;UAAAqB,QAAA,EAAKO,GAAG,CAACf;QAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpB1B,OAAA;UAAAqB,QAAA,EAAKO,GAAG,CAACd;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAHIE,GAAG,CAACC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI1B,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAIP;AAACxB,EAAA,CAjDED,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}