{"ast":null,"code":"var _jsxFileName = \"/home/buntix/Documents/mern-Application/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cars, setCars] = useState(\"\");\n  const [newCar, setnewCar] = useState(\"\");\n\n  //fetch all cars from mongodb\n  useEffect(() => {\n    fetch(\"http://localhost:3000/cars\").then(res => res.json()).then(data => {\n      setCars(data);\n      console.log(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newCar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"name\",\n        onChange: e => setnewCar({\n          ...newCar,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"model\",\n        onChange: e => setnewCar({\n          ...newCar,\n          model: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"color\",\n        onChange: e => setnewCar({\n          ...newCar,\n          color: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          fetch(\"http://localhost:3000/newCar\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newCar)\n          }).then(res => res.json()).then(data => {\n            setCars([...cars, data]);\n          });\n        },\n        children: \"Add Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updateCar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"id\",\n        onChange: e => setnewCar({\n          ...newCar,\n          _id: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"color\",\n        onChange: e => setnewCar({\n          ...newCar,\n          color: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          fetch(`http://localhost:3000/updateCar/${newCar._id}`, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newCar)\n          }).then(res => res.json()).then(data => {\n            // update the cars state\n            const newCars = cars.map(car => {\n              if (car._id === data._id) {\n                return data;\n              } else {\n                return car;\n              }\n            });\n            setCars(newCars);\n          });\n        },\n        children: \"Update Car\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cars\",\n      children: cars && cars.map(car => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"car\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: car.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: car._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: car.model\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: car.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, car._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WNXpZ+rgb/pKg+nQ2uadTQQbzs4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","cars","setCars","newCar","setnewCar","fetch","then","res","json","data","console","log","className","children","type","placeholder","onChange","e","name","target","value","fileName","_jsxFileName","lineNumber","columnNumber","model","color","onClick","method","headers","body","JSON","stringify","_id","newCars","map","car","_c","$RefreshReg$"],"sources":["/home/buntix/Documents/mern-Application/client/src/App.js"],"sourcesContent":["import './App.css'\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n\n  const [cars, setCars] = useState(\"\")\n  const [newCar, setnewCar] = useState(\"\")\n\n  //fetch all cars from mongodb\n  useEffect(() => {\n    fetch(\"http://localhost:3000/cars\")\n    .then((res) => res.json())\n    .then((data) => {\n      setCars(data)\n      console.log(data)\n    })\n  }, [])\n    \n\n\n  return (\n    <div className=\"App\">\n              \n    {/* make div with 3 inputs that will change state of new car on change and button will add a car to database*/}\n    <div className=\"newCar\">\n      <input type=\"text\" placeholder=\"name\" onChange={(e) => setnewCar({...newCar, name: e.target.value})}/>\n      <input type=\"text\" placeholder=\"model\" onChange={(e) => setnewCar({...newCar, model: e.target.value})}/>\n      <input type=\"text\" placeholder=\"color\" onChange={(e) => setnewCar({...newCar, color: e.target.value})}/>\n      <button onClick={() => {\n        fetch(\"http://localhost:3000/newCar\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(newCar),\n        })\n        .then((res) => res.json())\n        .then((data) => {\n          setCars([...cars, data])\n        })\n      }}>Add Car</button>\n\n      \n    </div>\n    {/* make one input with button that will send put request with id and color to update the color\n     */}\n        \n    <div className=\"updateCar\">\n      <input type=\"text\" placeholder=\"id\" onChange={(e) => setnewCar({...newCar, _id: e.target.value})}/>\n      <input type=\"text\" placeholder=\"color\" onChange={(e) => setnewCar({...newCar, color: e.target.value})}/>\n      <button onClick={() => {\n        fetch(`http://localhost:3000/updateCar/${newCar._id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(newCar),\n        })\n        .then((res) => res.json())\n        .then((data) => {\n          // update the cars state\n          const newCars = cars.map((car) => {\n            if(car._id === data._id){\n              return data\n            } else {\n              return car\n            }\n          }\n          )\n          setCars(newCars)\n          \n        })\n      }}>Update Car</button>\n\n      </div>\n    <div className=\"cars\">\n      {cars && cars.map((car) => (\n        <div className=\"car\" key={car._id}>\n          <h2>{car.name}</h2>\n          <h2>{car._id}</h2>\n\n          <h3>{car.model}</h3>\n          <h3>{car.color}</h3>\n          </div>\n      ))}\n          \n       </div>\n       </div>\n\n      \n  );\n      }\n  \n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}